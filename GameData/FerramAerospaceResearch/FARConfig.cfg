FARConfig
{
    Settings {
        // KSP has some special math for calculating exposed area of parts
        // which ends up being greater than the geometric value, disable
        // this only if a mod overrides convection calculations. Note that
        // this will likely return greater values than stock so heating will
        // be increased
        exposedAreaUsesKSPHack = true

        // limit exposed area to radiative area value
        exposedAreaLimited = true
    }

    Debug {
        // level can also be set with an empty file FARLogger_<logLevel> in Plugins directory
        // until MM finishes loading patches, the level will then revert to this config value
        // one of [debug, info, warning, assert, error, exception] (in increasing order) case insensitive
        logLevel = info

        // debug option to dump all reflected configs on load, mainly to make sure they are correctly
        // saved
        dumpOnLoad = false
    }

    FlightLog {
        // directory where to save log files, either relative to KSP root or absolute path
        directory = Logs/FerramAerospaceResearch

        // log file name format, variables are enclosed in between <<< and >>>
        // currently only
        // VESSEL_NAME  -> name of the vessel logged
        // DATETIME     -> computer datetime string
        // are supported
        nameFormat = <<<VESSEL_NAME>>>_<<<DATETIME>>>.csv

        // custom DATETIME format
        // see https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings
        // for formatting options
        datetimeFormat = yyyy_MM_dd_HH_mm_ss

        // milliseconds between each log, the exact log times will depend on frame time
        period = 50

        // number of logs between flushes to file
        flushPeriod = 10
    }

    GuiColors {
        ClColor = 0.000,1.000,1.000
        CdColor = 1.000,0.000,0.000
        CmColor = 1.000,0.9215686,0.01568628
        L_DColor = 0.000,1.000,0.000
    }

    Textures {
        // paths to textures relative to GameData, no extension since KSP loads them
        // available loaders:
        //  default - textures are loaded by FAR using Unity
        //  GameDatabase - textures are taken from KSP GameDatabase
        TEXTURE {
            name = iconButtonBlizzy
            url = FerramAerospaceResearch/Textures/icon_button_blizzy
            loader = GameDatabase
        }

        TEXTURE {
            name = iconButtonStock
            url = FerramAerospaceResearch/Textures/icon_button_stock
            loader = GameDatabase
        }

        TEXTURE {
            name = spriteDebugVoxel
            url = FerramAerospaceResearch/Textures/sprite_debug_voxel
            loader = GameDatabase
        }
    }

    Shaders {
        // paths to bundles relative to GameData
        bundleLinux = FerramAerospaceResearch/Assets/farshaders_linux.far
        bundleWindows = FerramAerospaceResearch/Assets/farshaders_windows.far
        bundleMac = FerramAerospaceResearch/Assets/farshaders_macosx.far

        // loaders:
        //  default - use Shader.Find
        //  bundle - load from shader bundle
        // bundled shaders
        SHADER{
            name = debugVoxel
            url = FerramAerospaceResearch/Debug Voxel Mesh
            loader = bundle

            // specific value to this shader which controls the alpha cuttoff to make voxels appear
            // at correct depths
            _Cutoff = 0.45
        }

        // KSP shaders
        SHADER{
            name = lineRenderer
            url = Hidden/Internal-Colored
            loader = default
        }

        SHADER{
            name = debugVoxelFallback
            url = Sprites/Default
            loader = default
        }
    }
}
